===============================================================================
CyberSource Simple Order API for Java with BouncyCastle
Copyright 2014 CyberSource Corporation
===============================================================================

-------------------------------------------------------------------------------
RELEASE NOTES
-------------------------------------------------------------------------------

Please refer to the CHANGES file for the release notes.

-------------------------------------------------------------------------------
REQUIREMENTS
-------------------------------------------------------------------------------

--------------------
Minimum Requirements
--------------------

Oracle 1.6 JDK or later
Maven 2.2.1 or later

-------------------------------------------------------------------------------
TESTING
-------------------------------------------------------------------------------

You can run a test to the CyberSource Customer Acceptance System using the
included certificate. This is just for quick testing. You can use mvn
to run the tests applications (AuthSample, AuthCaptureSample)

mvn exec:java -Dexec.mainClass="com.cybersource.ws.client.sample.
AuthSample" -Dexec.args="src\main\resources\cybs.properties src\main\resources\a
uth.xml"

mvn exec:java -Dexec.mainClass="com.cybersource.ws.client.sample.
AuthCaptureSample" -Dexec.args="src\main\resources\cybs.properties"

You can also run the samples from your favorite IDE by adding the following
to the command line options when you run the samples,
src\main\resources\cybs.properties src\main\resources\auth.xml

-------------------------------------------------------------------------------
CONFIGURATION AND DEVELOPMENT
-------------------------------------------------------------------------------

1. You need a security key (<your merchant id>.p12) in order to send requests
   to the server.  If you do not have your key yet, refer to the accompanying
   Developer support site for more information; http://www.cybersource.com/developers/
   You can create an evaluation account here; http://www.cybersource.com/register/

2. Edit cybs.properties and make the following changes:

	a. Set merchantId to your merchantID.  Please note that it is
           case-sensitive.
	b. Set keysDirectory to the directory where your key resides.  Use
	   forward-slashes for the directory separator, even on Windows.
	   For example, "c:/keys"
	   
	(Optional Additional Changes)
	c. Set targetAPIVersion to the latest version displayed at:
	   https://ics2ws.ic3.com/commerce/1.x/transactionProcessor/
	   By default, it is set to the latest version when the package was
	   created.
	d. Modify the logging properties as appropriate. Use forward-slashes for
	   the directory separator in the logDirectory value, even on Windows.
	   The directory you specify must already exist.
	e. Please refer to the accompanying documentation for the other
           optional properties that you may wish to specify.
	   
	NOTE:  sendToProduction is initially set to false.  Set it to true only
	       when you are ready to send live transactions.

NOTES:

1. If you encounter the following exception message when you run the samples:

  		java.net.MalformedURLException: unknown protocol: https

   you will need to follow the instructions in the "If Unable to Connect to
   External Sites with HTTPS" section appropriate to the Java SDK you are
   using below.
   
2. If you encounter the following exception message when you run the samples:

		javax.net.ssl.SSLException: untrusted server cert chain

   you will need to follow the instructions in the "Importing the Root CA
   Certificate" section below.

3. If you have the following error;

        com.cybersource.ws.client.ClientException: exception decrypting
        data - java.security.InvalidKeyException: Illegal key size

  you will need to download the unrestricted export security policy for your
  java vm and install it.

        http://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html

---------------------------------
Importing the Root CA Certificate
---------------------------------

Perform this procedure only if the following exception message appeared when
you ran the nvpSample:  javax.net.ssl.SSLException: untrusted server cert chain

1. Go to the cybersource-sdk-java-n.n.n directory where the file entrust_ssl_ca.cer
   is located.

2. Type the following (without the line breaks):

	  	keytool -import -alias entrust_ssl_ca 
	  			-keystore <JAVA_HOME>/jre/lib/security/cacerts 
	  			-file entrust_ssl_ca.cer
	  			
	  	where <JAVA_HOME> is the path to your Java installation.
	  	
   (keytool is a utility included in the Java SDK.)
	  	
3. Enter the keystore password when prompted for it.  The default password
   is usually "changeit".

-------------------------------------------------------------------------------
THIRD-PARTY LICENSES
-------------------------------------------------------------------------------

See the accompanying license files.


